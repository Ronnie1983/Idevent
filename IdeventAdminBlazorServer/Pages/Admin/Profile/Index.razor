@page "/Profile/{Id}"
@page "/Profile"

@attribute [Authorize]

@using IdeventLibrary.Repositories
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity

@inject AuthenticationStateProvider _authenticationStateProvider
@inject NavigationManager _navigationManager
@inject UserRepository _userRepository

<AuthorizeView>
    <h1>Profile</h1>

    @if (_profileData != null)
    {
        <section>
            <PropertyDisplay PropertyName="Id" PropertyValue="@(_profileData.Id)" />
            <PropertyDisplay PropertyName="Email" PropertyValue="@(_profileData.Email)" />
            @if (!String.IsNullOrWhiteSpace(_profileData.Role))
            {
                <PropertyDisplay PropertyName="Role" PropertyValue="@(_profileData.Role)" />
            }
            else
            {
                <PropertyDisplay PropertyName="Role" PropertyValue="Failed to read role"/>
            }
            <PropertyDisplay PropertyName="Phone Number" PropertyValue="@(_profileData.PhoneNumber)"/>
            @if(_profileData.Address != null)
            {
                <PropertyDisplay PropertyName="Address" PropertyValue="@(_profileData.Address.StreetAddress)"/>
            }
            @if(_profileData.InvoiceAddress != null)
            {
                <PropertyDisplay PropertyName="Invoice Address" PropertyValue="@(_profileData.InvoiceAddress.StreetAddress)"/>
            }
        </section>
    }
</AuthorizeView>




@code {
    [Parameter]
    public string Id { get; set; }
    private string _key;
    private UserModel _profileData;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            AuthenticationState authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
            ClaimsPrincipal userClaim = authState.User;
            UserModel user = await _userRepository.GetByClaim(userClaim);

            _profileData = user;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

}
