@page "/Chips"
@using System.Reflection.Metadata
@using IdeventLibrary.Repositories
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

@attribute [Authorize(Roles ="SuperAdmin, Admin, Operator")]

@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider
@inject UserRepository _userRepository
@inject ChipRepository _chipRepository

<h1>Chips Oversigt</h1>
<br />
@if (string.IsNullOrWhiteSpace(_errorMessage) is false)
{
    <div class="alert alert-warning">@_errorMessage</div>
}

@*Not implemented
    <input placeholder="indtast din søgning" />*@

<div>
    <AuthorizeView Roles="SuperAdmin, Admin">
        @*this section is only for SuperAdmin & Admin*@
        <br/>
        <div>
            <div class="btn-group">
                <div>
                    <NavigateButton PageToNavigateTo="AddChip" ButtonText="Add Chip"/>

                    <button class="btn btn-primary m-1" data-bs-toggle="modal" data-target="#M">Export</button>

                    <!-- Export Modal -->
                    <div class="modal fade" id="M" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Der er ikke nogen funktion her endnu</h5>
                                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>

                                <div class="modal-body">
                                    Kommer senere
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Modal End -->
                    <NavigateButton PageToNavigateTo="ImporterChip" ButtonText="Import"/>
                </div>
                @*  @if (_chips != null)
                    {
                    <div class="dropdown show">
                    <a class="btn btn-primary m-1 dropdown-toggle" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Actions
                    </a>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">

                    <a class="dropdown-item">Move To Event</a>
                    <a class="dropdown-item">Assign Group</a>
                    <a class="dropdown-item" style="color: red">Delete</a>
                    </div>
                    </div>
                    }*@


            </div>
        </div>
    </AuthorizeView>

    <br />
    @if (_chips != null)
    {
        <table class="table table-hover">
            <thead>
                <tr>
                    @*<th scope="col">Selection</th>*@
                    <th scope="col">Chip ID</th>
                    <th scope="col">User Mail</th>
                    <th scope="col">From</th>
                    <th scope="col">To</th>
                    <th scope="col">Company</th>
                    <th scope="col">Group</th>
                    <th scope="col">Event</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (ChipModel chip in _chips)
                {
                    <tr>
                        @*<td scope="row"><input type="checkbox"></td>*@
                        <td>@chip.Id</td>
                        <td>No User Data</td>
                        <td>@chip.ValidFrom.ToString("d")</td>
                        <td>@chip.ValidTo.ToString("d")</td>
                        <td>@chip.Company.Name</td>

                        @if (@chip.Group == null)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@chip.Group.Name</td>
                        }
                        @if (@chip.Event == null)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@chip.Event.Name</td>
                        }
                        
                        <td>
                            <div class="btn-group">
                                @*<NavigateButton PageToNavigateTo=@(NavigationArgument("EditEvent/", eventModel.Id)) ButtonText="Edit event"/>*@
                                <AuthorizeView Roles="SuperAdmin,Admin">
                                    <NavigateButton PageToNavigateTo=@(Common.Helpers.NavigationArgument("EditChip/", chip.Id)) ButtonText="Edit" />
                                </AuthorizeView>

                                <NavigateButton PageToNavigateTo=@(Common.Helpers.NavigationArgument("ChipDetails/", chip.Id)) ButtonText="Details" />
                            </div>
                        </td>
                        
                    </tr>
                }
            </tbody>
        </table>
    }

</div>


@code {

    [Parameter]
    public string ChipId { get; set; }

    private string _errorMessage;
    private List<ChipModel> _chips;
    private UserModel _profileData;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            
            _chips = await _chipRepository.GetAllAsync();
            AuthenticationState authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
            ClaimsPrincipal userClaim = authState.User;
            UserModel user = await _userRepository.GetByClaim(userClaim);

            _profileData = await _userRepository.GetUserById(user.Id);

            if (_profileData.Role != "SuperAdmin")
            {
                _chips = _chips.Where(x=>x.Company.Id == _profileData.Company.Id).ToList();
            }
        }
        catch (Exception exception)
        {
            _errorMessage = "Something went wrong while fetching data.";
            Console.WriteLine(exception);
        }
    }


}
