@page "/ChipDetails/{ChipId}"
@using IdeventLibrary.Repositories

@attribute [Authorize(Roles = "SuperAdmin, Admin")]

<h1>Chip Details</h1>

<NavigateButton PageToNavigateTo="Chips" ButtonText="Back" HtmlClasses="btn-danger m-1" />
@if (_chip == null)
{
    <Loader />
}
@if (_chip.Id == 0)
{
    <span>@_errorMessage</span>
}
@if (_chip.Id != 0)
{
    <section>
        <PropertyDisplay PropertyName="ID" PropertyValue="@(_chip.Id.ToString())" />
        <PropertyDisplay PropertyName="User E-mail" PropertyValue="Not connected to a user" /> <!-- TODO: Display User E-mail -->
        <PropertyDisplay PropertyName="Valid From" PropertyValue="@(_chip.ValidFrom.ToString("d"))" />
        <PropertyDisplay PropertyName="Valid To" PropertyValue="@(_chip.ValidTo.ToString("d"))" />
        <PropertyDisplay PropertyName="Company" PropertyValue="@(_chip.Company.Name)" />
        <PropertyDisplay PropertyName="Company Phone Number" PropertyValue="@(_chip.Company.PhoneNumber)" />
        @if (_chip.Event == null)
        {
            <PropertyDisplay PropertyName="Event" PropertyValue="Not connected to event" />
        }
        else
        {
            <PropertyDisplay PropertyName="Event" PropertyValue="@(_chip.Event.Name)" />
        }
        @if (_chip.Group == null)
        {
            <PropertyDisplay PropertyName="Group" PropertyValue="Not connected to a group" />
        }
        else
        {
            <PropertyDisplay PropertyName="Group" PropertyValue="@(_chip.Group.Name)" />
        }

        <div><span class="fw-bold">Products</span></div>
        @if (_chip.StandProducts.Count > 0 & _chip.StandProducts != null)
        {
            <div>
                @foreach (var product in _chip.StandProducts)
                {
                    <span>@product.Name</span>
                    <span>@product.Amount</span>

                    <br />
                }
            </div>
        }
        else
        {
            <div>There are no products on this chip.</div>
        }

    </section>
}


@code {
    // TODO: Display User Email
    // TODO: Display Product Contents
    [Parameter]
    public string ChipId { get; set; }

    private ChipModel _chip = new ChipModel();
    private string _errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ChipRepository chipRepo = new ChipRepository();
            _chip = await chipRepo.GetById(Convert.ToInt32(ChipId));
        }
        catch (Exception ex)
        {
            _errorMessage = "There was an error while fetching data.";
            Console.WriteLine(ex);
        }
    }
}
